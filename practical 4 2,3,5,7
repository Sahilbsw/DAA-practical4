def max_subarray_with_constraint(arr, constraint):
    n = len(arr)
    best_sum = 0
    best_subarray = []

    for i in range(n):
        current_sum = 0
        for j in range(i, n):
            current_sum += arr[j]
            if current_sum &lt;= constraint and current_sum &gt; best_sum:
                best_sum = current_sum
                best_subarray = arr[i:j+1]

    return best_sum, best_subarray

resources = [2, 1, 3, 4]
constraint = 5
result_sum, result_subarray = max_subarray_with_constraint(resources, constraint)
print(&quot;Maximum Subarray Sum:&quot;, result_sum)
print(&quot;Subarray:&quot;, result_subarray)
